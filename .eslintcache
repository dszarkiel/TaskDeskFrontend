[{"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/index.js":"1","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/App.js":"2","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/reducers/index.js":"3","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/SignIn.js":"4","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/Dashboard.js":"5","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/reducers/tasks.js":"6","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/TaskForm.js":"7","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/TaskContainer.js":"8","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/NavBar.js":"9","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/TaskCard.js":"10","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/reducers/currentUser.js":"11","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/actions/loginUser.js":"12","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/actions/logoutUser.js":"13","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/actions/addTask.js":"14","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/ShowCard.js":"15","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/reducers/showTask.js":"16","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/actions/setShowCard.js":"17","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/actions/deleteTask.js":"18","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/UpdateTaskFrom.js":"19","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/actions/updateTask.js":"20","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/actions/completeTask.js":"21"},{"size":506,"mtime":1611683955366,"results":"22","hashOfConfig":"23"},{"size":1063,"mtime":1611880270519,"results":"24","hashOfConfig":"23"},{"size":291,"mtime":1611797245561,"results":"25","hashOfConfig":"23"},{"size":1874,"mtime":1611940519298,"results":"26","hashOfConfig":"23"},{"size":826,"mtime":1611871756773,"results":"27","hashOfConfig":"23"},{"size":1077,"mtime":1611859881407,"results":"28","hashOfConfig":"23"},{"size":2456,"mtime":1611941512016,"results":"29","hashOfConfig":"23"},{"size":640,"mtime":1611872078472,"results":"30","hashOfConfig":"23"},{"size":1571,"mtime":1611881536239,"results":"31","hashOfConfig":"23"},{"size":1644,"mtime":1611885422898,"results":"32","hashOfConfig":"23"},{"size":445,"mtime":1611768913958,"results":"33","hashOfConfig":"23"},{"size":108,"mtime":1611763270191,"results":"34","hashOfConfig":"23"},{"size":84,"mtime":1611763422455,"results":"35","hashOfConfig":"23"},{"size":100,"mtime":1611771119158,"results":"36","hashOfConfig":"23"},{"size":2391,"mtime":1611870359023,"results":"37","hashOfConfig":"23"},{"size":201,"mtime":1611798050011,"results":"38","hashOfConfig":"23"},{"size":105,"mtime":1611797458294,"results":"39","hashOfConfig":"23"},{"size":100,"mtime":1611800976089,"results":"40","hashOfConfig":"23"},{"size":2366,"mtime":1611941936188,"results":"41","hashOfConfig":"23"},{"size":106,"mtime":1611853715503,"results":"42","hashOfConfig":"23"},{"size":104,"mtime":1611859751332,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1tkstq7",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/index.js",[],["92","93"],"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/App.js",["94"],"import React from 'react';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Route, Switch} from 'react-router-dom'\nimport SignIn from './components/SignIn'\nimport Dashboard from './components/Dashboard';\nimport TaskForm from './components/TaskForm'\nimport ShowCard from './components/ShowCard'\nimport UpdateTaskFrom from './components/UpdateTaskFrom';\nimport NavBar from './components/NavBar'\nimport Logo from './images/TaskDesk.png'\n\n\nclass App extends React.Component {\n\n  render(){\n    return (\n      <BrowserRouter>\n    <div className=\"App\">\n      <NavBar />\n      <img src={Logo} width=\"400\" /><br></br>\n      <Switch>\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n        <Route exact path=\"/login\" component={SignIn} />\n        <Route exact path=\"/dashboard/new\" component={TaskForm} />\n        <Route exact path=\"/dashboard/:id\" component={ShowCard} />\n        <Route exact path=\"/dashboard/edit/:id\" component={UpdateTaskFrom} />\n      </Switch>\n    </div>\n    </BrowserRouter>\n  );\n  }\n}\n\nexport default App;\n","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/reducers/index.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/SignIn.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/Dashboard.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/reducers/tasks.js",["95","96","97"],"const tasks = (state= [], action) => {\n    let updatedTasks;\n\n    switch(action.type){\n        case \"LOG_IN_USER\":\n            return action.user.tasks\n        case \"ADD_TASK\":\n            return [...state, action.task]\n        case \"DELETE_TASK\":\n            updatedTasks = state.filter(taskObj => taskObj.id != action.id)\n            return updatedTasks\n        case \"UPDATE_TASK\":\n            updatedTasks = state.map(taskObj => {\n                if (taskObj.id == action.task.id ) {\n                    return action.task\n                } else {\n                    return taskObj\n                }\n            })\n            return updatedTasks\n        case \"COMPLETE_TASK\":\n            updatedTasks = state.map(taskObj => {\n                if (taskObj.id == action.id) {\n                    return {\n                        ...taskObj, complete: true\n                    }\n                } else {\n                    return taskObj\n                }\n            })\n            return updatedTasks\n        default: \n            return state\n    }\n}\n\nexport default tasks","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/TaskForm.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/TaskContainer.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/NavBar.js",["98","99","100"],"import React from 'react';\nimport {withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {logoutUser} from '../actions/logoutUser'\n\nclass NavBar extends React.Component {\n\n  handleLogout = () => {\n    this.props.logoutUser()\n    this.props.history.push(\"/login\")\n\n  }\n\n  handleCreateNewTask = () => {\n    this.props.history.push(\"/dashboard/new\")\n  }\n\n  render(){\n    return (\n      <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"#\">TaskDesk</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    </button>\n\n      {this.props.currentUser ?\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item active\">\n          <a className=\"nav-link\" href=\"#\" onClick={this.handleCreateNewTask}>New Task <span className=\"sr-only\">(current)</span></a>\n        </li>\n        <li className=\"nav-item active\">\n          <a className=\"nav-link\" href=\"#\" onClick={this.handleLogout}>Sign Out<span className=\"sr-only\">(current)</span></a>\n        </li>\n      </ul>\n      </div>\n        :\n        null\n        }\n\n      </nav>\n        </div>\n    );\n  }};\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser\n  }\n}\n\nconst mapDispatchToProps = {\n  logoutUser: logoutUser\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar));\n","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/TaskCard.js",["101","102"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {setShowCard} from '../actions/setShowCard'\nimport completeImg from '../images/Complete.png'\nimport incompleteImg from '../images/Incomplete.png'\nimport {completeTask} from '../actions/completeTask'\n\nclass TaskCard extends React.Component {\n\nhandleClick = (e) => {\n  this.props.setShowCard(this.props.task)\n  this.props.handleShowCard(e.target.id)\n}\n\nhandleCompleteTask = (e) => {\n  const id = e.target.id\n\n  fetch(`http://localhost:3000/tasks/${id}`, {\n    method: \"PATCH\",\n    headers: {\"Content-Type\": \"application/json\"},\n    body: JSON.stringify({\n        complete: true\n    })\n})\n.then(response => response.json())\n.then(() => {\n  this.props.completeTask(id)\n})\n} \n\n\n    render(){\n\n        const {id, title, body, complete} = this.props.task\n\n        return(\n            <div className=\"card\">\n            <h5 className=\"card-header\" >{complete ? <img src={completeImg} width=\"40px\" height=\"30px\"  /> : <img src={incompleteImg} width=\"20px\" height=\"20px\"/> }  {title}</h5>\n            <div className=\"card-body\">\n              <p className=\"card-text\">{body}</p>\n              <button className=\"btn btn-primary\" id={id} onClick={this.handleClick}>View</button>\n              {complete ? <button disabled={true} className=\"btn btn-success\">Complete</button> : <button className=\"btn btn-success\" id={id} onClick={this.handleCompleteTask} >Complete Task</button>}\n            </div>\n          </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    setShowCard: setShowCard,\n    completeTask: completeTask\n}\n\nexport default connect(null, mapDispatchToProps)(TaskCard)","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/reducers/currentUser.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/actions/loginUser.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/actions/logoutUser.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/actions/addTask.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/ShowCard.js",["103","104","105"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport {deleteTask} from '../actions/deleteTask'\nimport completeImg from '../images/Complete.png'\nimport incompleteImg from '../images/Incomplete.png'\n\nclass ShowCard extends React.Component {\n\n    handleBack = () => {\n        this.props.history.push(\"/dashboard\")\n    }\n    \n    handleDelete = (e) => {\n        const id = e.target.id\n\n        fetch(`http://localhost:3000/tasks/${id}`, {\n            method: \"DELETE\"\n        })\n        .then(response => response.json())\n        .then(() => {\n            this.props.deleteTask(id)\n            this.props.history.push(\"/dashboard\")\n        })\n    }\n\n    handleUpdate = (e) => {\n        this.props.history.push(`/dashboard/edit/${e.target.id}`)\n    }\n\n     convert = () =>{\n        let current_datetime = new Date()\n        let formatted_date = (current_datetime.getMonth() + 1) + \"-\" +  current_datetime.getDate() + \"-\" + current_datetime.getFullYear()\n        return formatted_date;\n      }\n\n    render(){\n\n        const {id, title, body, complete, created_at, updated_at} = this.props.showTask\n\n        return(\n            <div className=\"show-card\">\n                <div className=\"card text-center\">\n                    <div className=\"card-header\">\n                           TASK {complete ? <img src={completeImg} width=\"40px\" height=\"30px\" /> : <img src={incompleteImg} width=\"20px\" height=\"20px\" /> } \n                    </div>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{title}</h5>\n                        <p className=\"card-text\">{body}</p>\n                        <button className=\"btn btn-danger\" id={id} onClick={this.handleDelete}>Delete</button>\n                        <button className=\"btn btn-primary\" id={id} onClick={this.handleUpdate} >Update</button>\n                        <button className=\"btn btn-primary\" onClick={this.handleBack}>Back</button>\n                    </div>\n                 <div className=\"card-footer text-muted\">\n                     Created: {this.convert(created_at)}\n                </div>\n                </div>\n          </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        showTask: state.showTask,\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteTask: deleteTask\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowCard)","/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/reducers/showTask.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/actions/setShowCard.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/actions/deleteTask.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/components/UpdateTaskFrom.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/actions/updateTask.js",[],"/Users/dominikszarkiel/Flatiron/Projects/Mod4-TaskDesk /task-desk-frontend/src/actions/completeTask.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":21,"column":7,"nodeType":"112","endLine":21,"endColumn":37},{"ruleId":"113","severity":1,"message":"114","line":10,"column":63,"nodeType":"115","messageId":"116","endLine":10,"endColumn":65},{"ruleId":"113","severity":1,"message":"117","line":14,"column":32,"nodeType":"115","messageId":"116","endLine":14,"endColumn":34},{"ruleId":"113","severity":1,"message":"117","line":23,"column":32,"nodeType":"115","messageId":"116","endLine":23,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":22,"column":9,"nodeType":"112","endLine":22,"endColumn":46},{"ruleId":"118","severity":1,"message":"119","line":30,"column":11,"nodeType":"112","endLine":30,"endColumn":79},{"ruleId":"118","severity":1,"message":"119","line":33,"column":11,"nodeType":"112","endLine":33,"endColumn":72},{"ruleId":"110","severity":1,"message":"111","line":38,"column":54,"nodeType":"112","endLine":38,"endColumn":107},{"ruleId":"110","severity":1,"message":"111","line":38,"column":110,"nodeType":"112","endLine":38,"endColumn":163},{"ruleId":"120","severity":1,"message":"121","line":38,"column":55,"nodeType":"122","messageId":"123","endLine":38,"endColumn":65},{"ruleId":"110","severity":1,"message":"111","line":44,"column":45,"nodeType":"112","endLine":44,"endColumn":97},{"ruleId":"110","severity":1,"message":"111","line":44,"column":100,"nodeType":"112","endLine":44,"endColumn":154},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'updated_at' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]